generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String              @id @default(uuid())
  email     String              @unique
  name      String?
  lifts     UserLift[]
  sessions  TrainingSession[]
  progressions Progression[]
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
}

model Lift {
  id            String          @id @default(uuid())
  name          String
  category      LiftCategory
  muscleGroup   String?         // e.g., "Chest - Fly", "Biceps 2", etc.
  userLifts     UserLift[]
  sessionLifts  SessionLift[]
  progressions  Progression[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model UserLift {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  lift        Lift     @relation(fields: [liftId], references: [id])
  liftId      String
  starting1RM Float
  current1RM  Float
  createdAt   DateTime @default(now())
}

model TrainingSession {
  id          String         @id @default(uuid())
  user        User           @relation(fields: [userId], references: [id])
  userId      String
  sessionDate DateTime       @default(now())
  completed   Boolean        @default(false)
  lifts       SessionLift[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model SessionLift {
  id         String           @id @default(uuid())
  session    TrainingSession  @relation(fields: [sessionId], references: [id])
  sessionId  String
  lift       Lift             @relation(fields: [liftId], references: [id])
  liftId     String
  weight     Float
  reps       Int
  sets       Int
  rpe        Int
  createdAt  DateTime         @default(now())
}

model Progression {
  id               String   @id @default(uuid())
  user             User     @relation(fields: [userId], references: [id])
  userId           String
  lift             Lift     @relation(fields: [liftId], references: [id])
  liftId           String
  cycleNumber      Int
  previous1RM      Float
  new1RM           Float
  adjustmentReason AdjustmentReason
  createdAt        DateTime @default(now())
}

enum LiftCategory {
  Squat
  BenchPress
  Deadlift
  OverheadPress
  Accessory
}

enum AdjustmentReason {
  FullSuccess
  MinorFailure
  MajorFailure
}
